import '../models/{{name.snakeCase()}}.dart';

{{#codegen}}
import 'package:riverpod_annotation/riverpod_annotation.dart';
part '{{name.snakeCase()}}_controller.g.dart';
{{/codegen}}

{{^codegen}}
{{#hooks}}
import 'package:hooks_riverpod/hooks_riverpod.dart';
{{/hooks}}
{{^hooks}}
import 'package:flutter_riverpod/flutter_riverpod.dart';
{{/hooks}}
{{/codegen}}

{{#codegen}}
@riverpod
final class {{name.pascalCase()}}Controller extends _${{name.pascalCase()}}Controller {
{{/codegen}}
{{^codegen}}
final {{name.camelCase()}}ControllerProvider = NotifierProvider.autoDispose<{{name.pascalCase()}}Controller, {{name.pascalCase()}}Controller>(
  {{name.pascalCase()}}Controller.new,
);
final class {{name.pascalCase()}}Controller extends AutoDisposeNotifier<{{name.pascalCase()}}> {
{{/codegen}}
  @override
  {{name.pascalCase()}} build() {
    // TODO your business logic here! (e.g. inject services such as apis, db, cache, etc.)
  }
}
