import '../../domain/entities/{{name.snakeCase()}}.dart';
{{#service}}
import '../../domain/services/{{name.snakeCase()}}_service.dart';
{{/service}}
{{^service}}
import '../../domain/repositories/{{name.snakeCase()}}_repository.dart';
{{/service}}

{{^codegen}}
{{#hooks}}
import 'package:hooks_riverpod/hooks_riverpod.dart';
{{/hooks}}
{{^hooks}}
import 'package:flutter_riverpod/flutter_riverpod.dart';
{{/hooks}}
{{/codegen}}
{{#codegen}}
import 'package:riverpod_annotation/riverpod_annotation.dart';
part '{{name.snakeCase()}}_provider.g.dart';
{{/codegen}}


{{#codegen}}
@riverpod
{{name.pascalCase()}} {{name.camelCase()}}({{name.pascalCase()}}Ref ref) {
{{/codegen}}
{{^codegen}}
final {{name.camelCase()}}Provider = Provider.autoDispose<{{name.pascalCase()}}>((ref) {
{{/codegen}}
  {{#service}}
  final service = ref.watch({{name.camelCase()}}ServiceProvider);
  // TODO add more logic here?
  return service.get{{name.pascalCase()}}();
  {{/service}}
  {{^service}}
  final repository = ref.watch({{name.camelCase()}}RepositoryProvider);
  return repository.get{{name.pascalCase()}}();
  {{/service}}
}
{{^codegen}});{{/codegen}}
